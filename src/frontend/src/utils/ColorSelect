// src/utils/ColorSelect.js
export const getNoteColors = (note) => {
  const colorMap = {
    'A': 'red',
    'A#': 'orange',
    'Bb': 'orange',
    'B': 'amber',
    'C': 'yellow',
    'C#': 'lime',
    'Db': 'lime',
    'D': 'green',
    'D#': 'emerald',
    'Eb': 'emerald',
    'E': 'teal',
    'F': 'cyan',
    'F#': 'sky',
    'Gb': 'sky',
    'G': 'blue',
    'G#': 'indigo',
    'Ab': 'indigo'
  };

  const normalizedNote = note?.length >= 2 && note[1] === 'b' 
    ? `${String.fromCharCode(note.charCodeAt(0) - 1)}#`
    : note;

  if (!normalizedNote || !(normalizedNote in colorMap)) {
    return {
      'p-col': 'bg-purple-200',
      's-col': 'bg-purple-300',
      'h-col': 'bg-purple-100'
    };
  }

  const baseColor = colorMap[normalizedNote];
  return {
    'p-col': `bg-${baseColor}-200`,  // Primary (200-level)
    's-col': `bg-${baseColor}-300`,  // Secondary (300-level)
    'h-col': `bg-${baseColor}-100`   // Hover (100-level)
  };
};

export const getColorForChord = (root) => {
  const baseNote = root?.replace(/[^A-G#b]/g, '');
  return getNoteColors(baseNote);
};